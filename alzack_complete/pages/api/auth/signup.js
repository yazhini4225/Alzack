import prisma from '../../../lib/prisma'; import { hashPassword } from '../../../lib/auth'
export default async function handler(req,res){ if(req.method!=='POST') return res.status(405).end(); const { name,email,password,phone,role,patientId,relationship } = req.body; if(!email||!password) return res.status(400).json({error:'missing'}); const passwordHash = await hashPassword(password); if(role==='PATIENT'){ const p = await prisma.patient.create({ data:{ name, patientCode: 'P-'+Math.random().toString(36).slice(2,8).toUpperCase(), phone } }); await prisma.user.create({ data:{ name, email, passwordHash, role:'PATIENT', patientId: p.id, phone } }); return res.json({ ok:true, patientId: p.id }) } if(role==='CAREGIVER'){ const c = await prisma.caregiver.create({ data:{ name, caregiverCode: 'C-'+Math.random().toString(36).slice(2,8).toUpperCase(), phone, relationship } }); if(patientId){ await prisma.patient.update({ where:{ id: patientId }, data:{ caregivers:{ connect:{ id:c.id } } } }) } await prisma.user.create({ data:{ name, email, passwordHash, role:'CAREGIVER', caregiverId: c.id, phone } }); return res.json({ ok:true, caregiverId: c.id }) } res.status(400).json({ error:'unknown role' }) }
