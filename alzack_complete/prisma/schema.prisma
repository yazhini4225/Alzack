generator client { provider = "prisma-client-js" }
datasource db { provider = "postgresql" url = env("DATABASE_URL") }

model User {
  id           String   @id @default(uuid())
  email        String   @unique
  passwordHash String
  name         String
  role         String
  phone        String?
  createdAt    DateTime @default(now())
  patientId    String?
  caregiverId  String?
  patient      Patient? @relation(fields: [patientId], references: [id])
  caregiver    Caregiver? @relation(fields: [caregiverId], references: [id])
}

model Patient {
  id            String   @id @default(uuid())
  patientCode   String   @unique
  name          String
  dob           DateTime?
  gender        String?
  phone         String?
  bloodGroup    String?
  physicianName String?
  physicianContact String?
  emergencyContact String?
  healthStageEnc String?
  routines      Routine[]
  memoryEntries MemoryEntry[]
  journalEntries JournalEntry[]
  moodLogs      MoodLog[]
  caregivers    Caregiver[] 
  user          User?    @relation(fields: [userId], references: [id])
  userId        String?
}

model Caregiver {
  id            String   @id @default(uuid())
  caregiverCode String   @unique
  name          String
  relationship  String?
  phone         String?
  patients      Patient[]
  user          User?    @relation(fields: [userId], references: [id])
  userId        String?
}

model Routine {
  id         String   @id @default(uuid())
  patient    Patient  @relation(fields: [patientId], references: [id])
  patientId  String
  title      String
  details    String?
  time       DateTime
  snoozeMins Int
  active     Boolean  @default(true)
}

model MemoryEntry {
  id          String   @id @default(uuid())
  patient     Patient  @relation(fields: [patientId], references: [id])
  patientId   String
  name        String
  relationship String?
  imageUrl    String?
  story       String?
}

model JournalEntry {
  id        String   @id @default(uuid())
  patient   Patient  @relation(fields: [patientId], references: [id])
  patientId String
  text      String
  createdAt DateTime @default(now())
}

model MoodLog {
  id        String   @id @default(uuid())
  patient   Patient  @relation(fields: [patientId], references: [id])
  patientId String
  source    String
  moodValue Int
  notes     String?
  createdAt DateTime @default(now())
}

model LocationShare {
  id        String   @id @default(uuid())
  patient   Patient  @relation(fields: [patientId], references: [id])
  patientId String
  lat       Float
  lng       Float
  timestamp DateTime @default(now())
}
